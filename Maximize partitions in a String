#include <iostream>
#include <unordered_map>
using namespace std;

class Solution {
public:
    int maxPartitions(string s) {
        unordered_map<char, int> lastIndex;

        // Step 1: Store the last occurrence index of each character
        for (int i = 0; i < s.size(); i++) {
            lastIndex[s[i]] = i;
        }

        int partitions = 0;
        int maxEnd = 0;

        // Step 2: Traverse and find partitions
        for (int i = 0; i < s.size(); i++) {
            maxEnd = max(maxEnd, lastIndex[s[i]]);
            if (i == maxEnd) {  // If current index reaches the partition end
                partitions++;
            }
        }

        return partitions;
    }
};
