class Solution {
  public:
    // Function to find the length of a loop in the linked list.
    int countNodesinLoop(Node *head) {
        //Approach 2
        //By using Tortoise and hare algorithm
        
        Node* slow=head;
        Node* fast=head;
        while(fast!=nullptr and fast->next!=nullptr)//typical tortoise and hare algorithm
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)break;//Loop is found
        }
        if(fast==nullptr or fast->next==nullptr)//checking for if no loop is found
        {
            return 0;
        }
        
        slow=slow->next;
        int count=1;
        while(slow!=fast)//move slow until we find the fast and keep counting
        {
            slow=slow->next;
            count++;
        }
        return count;
    }
};
